{"ast":null,"code":"import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from '../constants';\nimport setAuthHeader from '../utils/setAuthHeader';\nexport const connectionUser = userData => dispatch => {\n  axios.post('http://localhost:5000/api/users/connection', userData).then(res => {\n    const {\n      token\n    } = res.data;\n    localStorage.setItem('jwtToken', token);\n    setAuthHeader(token);\n    dispatch(getCurrentUser());\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const registrationUser = (userData, history) => dispatch => {\n  axios.post('http://localhost:5000/api/users/registration', userData).then(res => history.push('/connection')).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const getCurrentUser = () => dispatch => {\n  axios.get('http://localhost:5000/api/users').then(res => dispatch(setCurrentUser(res.data)));\n};\nexport const setCurrentUser = data => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: data\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  setAuthHeader();\n  dispatch(setCurrentUser());\n};","map":{"version":3,"sources":["/home/gautier/Rendu/projet_mern/projet-final/projet-final-master/client/src/actions/authActions.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","setAuthHeader","connectionUser","userData","dispatch","post","then","res","token","data","localStorage","setItem","getCurrentUser","catch","err","type","payload","response","registrationUser","history","push","get","setCurrentUser","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,cAA7C;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAcC,QAAQ,IAAI;AACpDN,EAAAA,KAAK,CAACO,IAAN,CAAW,4CAAX,EAAyDF,QAAzD,EACKG,IADL,CACUC,GAAG,IAAI;AACT,UAAM;AAAEC,MAAAA;AAAF,QAAYD,GAAG,CAACE,IAAtB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC;AACAP,IAAAA,aAAa,CAACO,KAAD,CAAb;AACAJ,IAAAA,QAAQ,CAACQ,cAAc,EAAf,CAAR;AACH,GANL,EAOKC,KAPL,CAOWC,GAAG,IAAI;AACVV,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEhB,UADD;AAELiB,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaR;AAFjB,KAAD,CAAR;AAIH,GAZL;AAaH,CAdM;AAgBP,OAAO,MAAMS,gBAAgB,GAAG,CAACf,QAAD,EAAWgB,OAAX,KAAuBf,QAAQ,IAAI;AAC/DN,EAAAA,KAAK,CAACO,IAAN,CAAW,8CAAX,EAA2DF,QAA3D,EACKG,IADL,CACUC,GAAG,IAAIY,OAAO,CAACC,IAAR,CAAa,aAAb,CADjB,EAEKP,KAFL,CAEWC,GAAG,IAAIV,QAAQ,CAAC;AACnBW,IAAAA,IAAI,EAAEhB,UADa;AAEnBiB,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaR;AAFH,GAAD,CAF1B;AAMH,CAPM;AASP,OAAO,MAAMG,cAAc,GAAG,MAAMR,QAAQ,IAAI;AAC5CN,EAAAA,KAAK,CAACuB,GAAN,CAAU,iCAAV,EACKf,IADL,CACUC,GAAG,IAAIH,QAAQ,CAACkB,cAAc,CAACf,GAAG,CAACE,IAAL,CAAf,CADzB;AAEH,CAHM;AAKP,OAAO,MAAMa,cAAc,GAAIb,IAAD,IAAU;AACpC,SAAO;AACHM,IAAAA,IAAI,EAAEf,gBADH;AAEHgB,IAAAA,OAAO,EAAEP;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMc,UAAU,GAAG,MAAMnB,QAAQ,IAAI;AACxCM,EAAAA,YAAY,CAACc,UAAb,CAAwB,UAAxB;AACAvB,EAAAA,aAAa;AACbG,EAAAA,QAAQ,CAACkB,cAAc,EAAf,CAAR;AACH,CAJM","sourcesContent":["import axios from 'axios'\nimport { GET_ERRORS, SET_CURRENT_USER } from '../constants'\nimport setAuthHeader from '../utils/setAuthHeader'\n\nexport const connectionUser = (userData) => dispatch => {\n    axios.post('http://localhost:5000/api/users/connection', userData)\n        .then(res => {\n            const { token } = res.data\n            localStorage.setItem('jwtToken', token)\n            setAuthHeader(token)\n            dispatch(getCurrentUser())\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\nexport const registrationUser = (userData, history) => dispatch => {\n    axios.post('http://localhost:5000/api/users/registration', userData)\n        .then(res => history.push('/connection'))\n        .catch(err => dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        }))\n}\n\nexport const getCurrentUser = () => dispatch => {\n    axios.get('http://localhost:5000/api/users')\n        .then(res => dispatch(setCurrentUser(res.data)))\n}\n\nexport const setCurrentUser = (data) => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: data\n    }\n}\n\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem('jwtToken')\n    setAuthHeader()\n    dispatch(setCurrentUser())\n}"]},"metadata":{},"sourceType":"module"}